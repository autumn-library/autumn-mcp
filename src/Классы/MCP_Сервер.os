#Использовать json
#Использовать logos

Перем Лог;

Перем Инструменты;

// Основная процедура запуска приложения
//
Процедура Запустить() Экспорт

	Консоль.КодировкаВходногоПотока = "UTF-8";
	Консоль.КодировкаВыходногоПотока = "UTF-8";
	ПарсерJSON = Новый ПарсерJSON();

	Пока Истина Цикл
		ТекстКоманды = Консоль.ПрочитатьСтроку();
		Если Не ЗначениеЗаполнено(ТекстКоманды) Тогда
			Продолжить;
		КонецЕсли;
		Команда = ПарсерJSON.ПрочитатьJSON(ТекстКоманды);
		Метод = Команда.Получить("method");
		ИдентификаторКоманды = Команда.Получить("id");
		Если Метод = "initialize" Тогда
			Соответствие = Новый Соответствие;

			// Основные поля JSON-RPC
			Соответствие.Вставить("jsonrpc", "2.0");
			Соответствие.Вставить("id", ИдентификаторКоманды);

			// Создание соответствия для result
			Результат = Новый Соответствие;
			Результат.Вставить("protocolVersion", "2025-03-26");

			// Создание соответствия для capabilities
			Возможности = Новый Соответствие;

			// Создание соответствия для logging
			Лог = Новый Соответствие;
			Возможности.Вставить("logging", Лог);

			// Создание соответствия для prompts
			Возможности_Запросы = Новый Соответствие;
			Возможности.Вставить("prompts", Возможности_Запросы);

			// Создание соответствия для resources
			Возможности_Ресурсы = Новый Соответствие;
			Возможности.Вставить("resources", Возможности_Ресурсы);

			// Создание соответствия для tools
			Возможности_Инструменты = Новый Соответствие;
			Возможности.Вставить("tools", Возможности_Инструменты);

			Результат.Вставить("capabilities", Возможности);

			// Создание соответствия для serverInfo
			ИнформацияСервера = Новый Соответствие;
			ИнформацияСервера.Вставить("name", "AutumnMCP");
			ИнформацияСервера.Вставить("version", "1.0.0");
			Результат.Вставить("serverInfo", ИнформацияСервера);

			// Пустые инструкции
			Результат.Вставить("instructions", "");

			// Добавление результата в основное соответствие
			Соответствие.Вставить("result", Результат);

			Ответ = ПарсерJSON.ЗаписатьJSON(Соответствие, Ложь);
			Консоль.ВывестиСтроку(Ответ);
		ИначеЕсли Метод = "tools/list" Тогда
			// Создание основного соответствия из JSON
			Соответствие = Новый Соответствие;

			// Основные поля JSON-RPC
			Соответствие.Вставить("jsonrpc", "2.0");
			Соответствие.Вставить("id", ИдентификаторКоманды);

			// Создание соответствия для result
			Результат = Новый Соответствие;

			// Создание массива tools
			МассивИнструментов = Новый Массив;

			Для каждого КлючИЗначениеИнструмента Из Инструменты Цикл

				MCP_Инструмент = КлючИЗначениеИнструмента.Значение;

				// Создание соответствия для первого инструмента
				Инструмент = Новый Соответствие;
				Инструмент.Вставить("name", MCP_Инструмент.ИмяИнструмента());
				Инструмент.Вставить("description", MCP_Инструмент.ОписаниеИнструмента());
				// Добавление схемы в инструмент
				Инструмент.Вставить("inputSchema", MCP_Инструмент.СхемаИнструмента());

				// Добавление инструмента в массив
				МассивИнструментов.Добавить(Инструмент);

			КонецЦикла;

			// Добавление массива инструментов в результат
			Результат.Вставить("tools", МассивИнструментов);

			// Добавление результата в основное соответствие
			Соответствие.Вставить("result", Результат);

			Ответ = ПарсерJSON.ЗаписатьJSON(Соответствие, Ложь);
			Консоль.ВывестиСтроку(Ответ);
		ИначеЕсли Метод = "tools/call" Тогда
			ПараметрыКоманды = Команда.Получить("params");
			ИмяИнструмента = ПараметрыКоманды.Получить("name");
			ПараметрИнструментаы = ПараметрыКоманды.Получить("arguments");
			ЭтоОшибка = Ложь;
			Попытка
				Инструмент = Инструменты.Получить(ИмяИнструмента);
				Если Инструмент = Неопределено Тогда
					ВызватьИсключение СтрШаблон("Не найден инструмент %1", ИмяИнструмента);
				КонецЕсли;
				РезультатВыполнения = Инструмент.ВыполнитьИнструмент(Инструмент, ПараметрИнструментаы);
			Исключение
				РезультатВыполнения = ОписаниеОшибки();
				ЭтоОшибка = Истина;
			КонецПопытки;

			Соответствие = Новый Соответствие;

			// Основные поля JSON-RPC
			Соответствие.Вставить("jsonrpc", "2.0");
			Соответствие.Вставить("id", ИдентификаторКоманды);

			// Создание соответствия для result
			ТекстовыйРезультат = Новый Соответствие;

			СтруктураРезультата = Новый Структура;
			Если ЭтоСтруктура(РезультатВыполнения) Тогда
				СтруктураРезультата.Вставить("structuredContent", РезультатВыполнения);
			ИначеЕсли ЭтоМассив(РезультатВыполнения) Тогда
				СтруктураРезультата.Вставить("structuredContent", Новый Структура("array", РезультатВыполнения));
			КонецЕсли;

			ТекстовыйРезультат.Вставить("type", "text");
			ТипРезультата = ТипЗнч(РезультатВыполнения);
			Если ТипРезультата <> Тип("Строка") И ТипРезультата <> Тип("Дата") Тогда
				РезультатВыполнения = ПарсерJSON.ЗаписатьJSON(РезультатВыполнения, Ложь);
			КонецЕсли;
			ТекстовыйРезультат.Вставить("text", РезультатВыполнения);
			МассивРезультатов = Новый Массив();
			МассивРезультатов.Добавить(ТекстовыйРезультат);

			СтруктураРезультата.Вставить("content", МассивРезультатов);

			Если ЭтоОшибка Тогда
				СтруктураРезультата.Вставить("isError", Истина);
			КонецЕсли;

			// Добавление результата в основное соответствие
			Соответствие.Вставить("result", СтруктураРезультата);

			Ответ = ПарсерJSON.ЗаписатьJSON(Соответствие, Ложь);
			Консоль.ВывестиСтроку(Ответ);
		ИначеЕсли Метод = "prompts/list" Тогда
			// Создание основного соответствия из JSON
			Соответствие = Новый Соответствие;

			// Основные поля JSON-RPC
			Соответствие.Вставить("jsonrpc", "2.0");
			Соответствие.Вставить("id", ИдентификаторКоманды);

			// Создание соответствия для result
			Результат = Новый Соответствие;

			// Создание массива prompts
			МассивПромптов = Новый Массив;

			// Добавление массива prompts в результат
			Результат.Вставить("prompts", МассивПромптов);

			// Добавление результата в основное соответствие
			Соответствие.Вставить("result", Результат);

			Ответ = ПарсерJSON.ЗаписатьJSON(Соответствие, Ложь);
			Консоль.ВывестиСтроку(Ответ);
		ИначеЕсли Метод = "resources/list" Тогда
			// Создание основного соответствия из JSON
			Соответствие = Новый Соответствие;

			// Основные поля JSON-RPC
			Соответствие.Вставить("jsonrpc", "2.0");
			Соответствие.Вставить("id", ИдентификаторКоманды);

			// Создание соответствия для result
			Результат = Новый Соответствие;

			// Создание массива resources
			МассивРесурсов = Новый Массив;

			// Добавление массива resources в результат
			Результат.Вставить("resources", МассивРесурсов);

			// Добавление результата в основное соответствие
			Соответствие.Вставить("result", Результат);

			Ответ = ПарсерJSON.ЗаписатьJSON(Соответствие, Ложь);
			Консоль.ВывестиСтроку(Ответ);
		ИначеЕсли Метод = "ping" Тогда
			// Создание основного соответствия из JSON
			Соответствие = Новый Соответствие;

			// Основные поля JSON-RPC
			Соответствие.Вставить("jsonrpc", "2.0");
			Соответствие.Вставить("id", ИдентификаторКоманды);

			// Добавление результата в основное соответствие
			Соответствие.Вставить("result", Новый Соответствие);

			Ответ = ПарсерJSON.ЗаписатьJSON(Соответствие, Ложь);
			Консоль.ВывестиСтроку(Ответ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ДобавитьИнструмент(Инструмент) Экспорт
	
	Инструменты.Вставить(Инструмент.ИмяИнструмента(), Инструмент);
	Возврат Инструмент;
	
КонецФункции

Функция ЭтоСтруктура(Данные)
	
	Возврат (ТипЗнч(Данные) = Тип("Структура")
	     ИЛИ ТипЗнч(Данные) = Тип("ФиксированнаяСтруктура")
	     ИЛИ ТипЗнч(Данные) = Тип("Соответствие")
	     ИЛИ ТипЗнч(Данные) = Тип("ФиксированноеСоответствие"));
	
КонецФункции

Функция ЭтоМассив(Данные)
	
	Возврат (ТипЗнч(Данные) = Тип("Массив")
	     ИЛИ ТипЗнч(Данные) = Тип("ФиксированныйМассив")
		 ИЛИ ТипЗнч(Данные) = Тип("ТаблицаЗначений"));
	
КонецФункции

Процедура ПриСозданииОбъекта()

	Инструменты = Новый Соответствие();
	Лог = Логирование.ПолучитьЛог("oscript.lib.mcp_server");

КонецПроцедуры
